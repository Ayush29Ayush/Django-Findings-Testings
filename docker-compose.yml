version: '3.8'

services:
  postgres:
    image: postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis:
    image: redis:7-alpine
    restart: unless-stopped
  web:
    build: .
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./staticfiles:/app/staticfiles      # static files available locally
      - ./media:/app/media                  # media available locally
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
  celery_worker:
    build: .
    command: celery -A project worker -l info
    volumes:
      - ./media:/app/media
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
  celery_beat:
    build: .
    command: celery -A project beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
  flower:
    build: .
    command: celery -A project flower --address=0.0.0.0 --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - celery_worker
    restart: unless-stopped
  tests:
    build: .
    command: ["pytest"]
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
  pylint:
    build: .
    command: >
      sh -c "mkdir -p /app/media/analysis && pylint dummyapp pdfsummarizer celerydummyapp project --ignore=migrations,tests.py,admin.py,apps.py > /app/media/analysis/pylint_report.txt || exit 0"
    env_file:
      - .env
    profiles: ["lint"]
    volumes:
      - ./media:/app/media

          
volumes:
  postgres_data: